---
apiVersion: batch/v1
kind: Job
metadata:
  name: 300-ldap-register-ldap
  annotations:
    argocd.argoproj.io/sync-wave: "300"
  namespace: {{.Values.aiManagerNamespace}}
spec:
  template:
    spec:
      containers:
        - name: register
          image: niklaushirt/cp4waiops-cloudctl:0.1
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              memory: "64Mi"
              cpu: "150m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          command:
            - /bin/sh
            - -c
            - |
              set -x

              CLUSTER_ROUTE=$(oc get routes console -n openshift-console | tail -n 1 2>&1 ) 
              CLUSTER_FQDN=$( echo $CLUSTER_ROUTE | awk '{print $2}')
              CLUSTER_NAME=${CLUSTER_FQDN##*console.}
              CS_SERVER=$(echo "https://cp-console.$CLUSTER_NAME")
              CS_PWD=$(oc -n ibm-common-services get secret platform-auth-idp-credentials -o jsonpath='{.data.admin_password}' | base64 --decode)

              cloudctl login -a $CS_SERVER --skip-ssl-validation -u admin -p $CS_PWD -n kube-system
              cloudctl iam ldap-create "LDAP" --basedn {{.Values.ldapBase}} --server ldap://openldap.default:389 --binddn cn=admin,{{.Values.ldapBase}} --binddn-password {{.Values.ldapPassword}} -t "Custom" --group-filter "(&(cn=%v)(objectclass=groupOfUniqueNames))" --group-id-map "*:cn" --group-member-id-map "groupOfUniqueNames:uniqueMember" --user-filter "(&(uid=%v)(objectclass=Person))" --user-id-map "*:uid"
              TEAM_ID=$(echo $(cloudctl iam teams | awk '{print $1}'| sed -n 2p))
              cloudctl iam user-import -u demo -f
              cloudctl iam user-import -u dev -f
              cloudctl iam user-import -u test -f
              cloudctl iam user-import -u prod -f
              cloudctl iam user-import -u nik -f
              cloudctl iam user-import -u sre -f

              cloudctl iam team-add-users $TEAM_ID ClusterAdministrator -u demo
              cloudctl iam team-add-users $TEAM_ID Administrator -u dev
              cloudctl iam team-add-users $TEAM_ID Administrator -u test
              cloudctl iam team-add-users $TEAM_ID Administrator -u prod
              cloudctl iam team-add-users $TEAM_ID ClusterAdministrator -u nik
              cloudctl iam team-add-users $TEAM_ID ClusterAdministrator -u sre

              cloudctl iam resource-add $TEAM_ID -r crn:v1:icp:private:iam::::Directory:LDAP



      restartPolicy: Never
      serviceAccountName: openshift-argocd-admin-ai
  backoffLimit: 4